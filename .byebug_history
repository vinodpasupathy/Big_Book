exit
c
params[:product]
params
exit
'#{i.taxonomy}'.split('>')[0]
i.taxonomy.split('>')[0]
puts i.taxonomy.split('>')[0]
puts i.taxonomy.split('>')
puts i.taxonomy.split('>')[0]
puts i.taxonomy
puts i
exit
@p.to_a
@p.where(:name=> "Product Name").pluck(:value)[0]
exit
@p.to_a
@p
@p.to_a
@p
x@p
exit
@taxo1.collect{|p| p.id}
@taxo1.pluck(:id)
@taxo1
exit
@cc.count
@cc=Sku.pluck(:p_id).uniq
Sku.pluck(:p_id)
Sku.where(:p_id=>2).to_a
Sku.where(:p_id=>1).to_a
Sku.where(:p_id=>nil).to_a
Sku.where(:p_id=>nil)
@aa.to_a
@aa
@aa.where(:p_id=>@paq).present?
@aa=Sku.not.where(:p_id=>@paq)
Sku.not.where(:p_id=>@paq)
Sku.where.not.(:p_id=>@paq)
Sku.where.not(:p_id=>@paq)
Sku.where(:p_id=>@paq).present?
Sku.where(:p_id=>@paq).to_a
Sku.where(:p_id=>@paq)
Sku.where(:p_id=>@paq).present?
Sku.where(:p_id=>@paq).present? || params[:action]=="result"
@paq
params
exit
p
exit
CSV.read(file.tempfile)
file.tempfile
exit
CSV.read(file.tempfile, { :col_sep => "\t" })[0]
f=File.open(file.tempfile,"r").collect{|a|a.chomp.split("\t")}[0]
File.read(file.tempfile)
File.open(file.tempfile)
CSV.read(file.tempfile)
file.tempfile
file
exit
@param2
params
exit
params
exit
@cat
params
exit
params
exit
Product.where(:parent_id=>@par).to_a
@par
params
exit
Product.where(:parent_id=>@par).to_a
@par
Product.where(:parent_id=>@par).present?
params
exit
Sku.where(:i_id=>@i).where(:name=>@j).pluck(:value,:unit).uniq.join
Sku.where(:i_id=>@i).where(:name=>@j).to_a
@pf
@ss
@j
exit
@ss
exit
@ss
@pf
exit
 @param=(params[:search]).to_s.downcase
params
@param
@params
exit
params
exit
params
exit
Sku.where(:i_id=>params[:format]).to_a
Sku.where(:id=>params[:format]).to_a
Sku.where(:id=>params[:format]).pluck(:p_id)[0]
@rel1
@rell
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h.to_s).to_a
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h).to_a
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h.to_a).to_a
@aa=Sku.where(:value=>$h.to_s).to_a
@aa=Sku.where(:p_id=>@rel1).to_a
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h).to_a
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h)
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h).distinct(:i_id)
@aa=Sku.where(:p_id=>@rel1).where(:value=>$h)distinct(:i_id)
Sku.where(:p_id=>@rel1).distinct(:i_id)
@cat
$h
params
exit
@cc
params
exit
Product.where(:parent_id=>@par).present?
@par
params
exit
@cc
@ss
exit
@i
@cc
@pf
@n
@ss
@cc
params
exit
@cc
params
exit
params
exit
@all.pluck(:id)[0]
@all.pluck(:id)
@all.select{|i| p i.i_id}.uniq
@all.select{|i| puts i.i_id}.uniq
@all.select{|i| puts i.i_id}
@all.to_a
@all
params
exit
@sku3.each{|i| puts i.value}
@sku3.select{|i| puts i.value}
@sku3.to_a
@sku3.distinct(:value)
@sku3.to_a
@sku3
exit
params
exit
params
exit
@kk
j
@r
exit
@r
exit
@par1.to_a.each{|i| puts i.taxonomy}
@par1.each{|i| puts i.taxonomy}
@par1.to_a
@par1
@r
@c
exit
@r
@c
i.taxonomy
@par1.to_a
@par1
$manufacture
@par
exit
Product.where(:parent_id=>"4").to_a
Product.where(:parent_id=>"4")
@par
@r
@c.uniq
@c
puts i
@r
exit
else
@r==j
j
@r
puts j
exit
c
jc
j
c
j
c
j
c
j
c
j
c
j
c
j
c
j
r
r==j
c
r==j
c
r==j
c
r==j
c
r==j
jr==j
exit
@product1
@ta
exit
c
@ta
c
@product1
exit
@product1
exit
c
r
j
exitt
c
j
c
r
j
c
j
c
j
c
j
c
j
c
j
